buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.5.2"
    }
}


group = "io.reactivex.rxjava2"
ext.githubProjectName = "rxjavafx"

version = project.properties["release.version"]

def releaseTag = System.getenv("TRAVIS_TAG");
if (releaseTag != null && !releaseTag.isEmpty()) {
    if (releaseTag.startsWith("v")) {
        releaseTag = releaseTag.substring(1);
    }
    version = releaseTag;
    project.properties.put("release.version", releaseTag);

    println("Releasing with version " + version);
}


apply plugin: "java"
apply plugin: "maven"
apply plugin: "com.jfrog.bintray"
apply plugin: "com.jfrog.artifactory"


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11


def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'io.reactivex.rxjava2:rxjava:2.2.2'
    compile "org.openjfx:javafx-base:11:${platform}"
    compile "org.openjfx:javafx-graphics:11:${platform}"
    compile "org.openjfx:javafx-controls:11:${platform}"
    testCompile 'junit:junit-dep:4.+'
    testCompile 'org.mockito:mockito-core:1.8.5'
}



task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}



apply plugin: "maven-publish"

install {
    repositories.mavenInstaller.pom.project {
        name "RxJavaFX"
        description "RxJava Extensions for JavaFX"
        url "https://github.com/ReactiveX/RxJavaFX"
        licenses {
            license {
                name "The Apache Software License, Version 2.0"
                url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution "repo"
            }
        }
        developers {
            developer {
                id "thomasnield"
                name "Thomas Nield"
                email "thomasnield@live.com"
            }
        }
        scm {
            connection "scm:git:git@github.com:ReactiveX/RxJavaFX.git"
            url "scm:git:git@github.com:ReactiveX/RxJavaFX.git"
            developerConnection "scm:git:git@github.com:ReactiveX/RxJavaFX.git"
        }
        issueManagement {
            system "github"
            url "https://github.com/ReactiveX/RxJavaFX/issues"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact (sourcesJar) {
                classifier = "sources"
            }
        }
    }
}

// Reactive-Streams as compile dependency
publishing.publications.all {
    pom.withXml {
        asNode().dependencies."*".findAll() {
            it.scope.text() == "runtime" && project.configurations.compile.allDependencies.find { dep ->
                dep.name == it.artifactId.text()
            }
        }.each { it.scope*.value = "compile"}
    }
}



if (rootProject.hasProperty("releaseMode")) {

    if ("branch".equals(rootProject.releaseMode)) {
        // From https://github.com/ReactiveX/RxAndroid/blob/2.x/rxandroid/build.gradle#L94

        println("ReleaseMode: " + rootProject.releaseMode);
        artifactory {
            contextUrl = "https://oss.jfrog.org"

            publish {
                repository {
                    repoKey = "oss-snapshot-local"

                    username = rootProject.bintrayUser
                    password = rootProject.bintrayKey
                }

                defaults {
                    publishConfigs("archives")
                }
            }
        }

        build.finalizedBy(artifactoryPublish)
    }

    if ("full".equals(rootProject.releaseMode)) {
        // based on https://github.com/bintray/gradle-bintray-plugin
        def rver = version;

        println("ReleaseMode: " + rootProject.releaseMode + " version " + rver);

        bintray {
            user = rootProject.bintrayUser
            key = rootProject.bintrayKey
            configurations = ["archives"]
            publish = true
            pkg {
                repo = "RxJavaFX"
                name = "RxJavaFX"
                userOrg = "reactivex"
                labels = ["rxjavafx", "reactivex"]
                licenses = ["Apache-2.0"]
                vcsUrl = "https://github.com/ReactiveX/RxJavaFX.git"
                version {
                    name = rver
                    gpg {
                        sign = true
                    }
                    mavenCentralSync {
                        sync = true
                        user = rootProject.sonatypeUsername
                        password = rootProject.sonatypePassword
                        close = "1"
                    }
                }
            }
        }

        build.finalizedBy(bintrayUpload)
    }
}
